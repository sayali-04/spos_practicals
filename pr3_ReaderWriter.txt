package pr3;
import java.util.*;
import java.util.concurrent.Semaphore;
public class ReaderWriter {
	
	static int mutex=1;
	static int database=1;
	static int readCount=0;
	
	static void reader() {
		mutex=wait(mutex);
		readCount=readCount+1;
		if(readCount==1) {
			database=signal(database);
		}
		mutex=signal(mutex);
		System.out.println(readCount+" user reading the data...");
		
		mutex=wait(mutex);
		readCount=readCount-1;
		if(readCount==0) {
			database=signal(database);
		}
		mutex=signal(mutex);
		System.out.println("reading finished!!!");
	}
	
	
	static int wait(int mutex) {
		while (mutex<=0)
			break;
		mutex=mutex-1;
		return mutex;
	}
	
	static int signal(int database) {
		database=database+1;
		return database;
	}
	
	static void writer() {
		database=wait(database);
		System.out.println("Writing on database...");
		database=signal(database);
		System.out.println("Writing finished!!!");
		
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		writer();
		reader();
		reader();
	}

}
/* *********************** OUTPUT *************************
Writing on the database......
Writing Finished!!!!!.
1 User Reading the Data.........
Reading Finished!!!!!!
1 User Reading the Data.........
Reading Finished!!!!!!
***********************************************************
